#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`)
png("Framework 3D Scatter.png", width = 1600, height = 1000)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` ~ type + variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
dev.off()
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` ~ type + variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` ~ type + variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` ~ type + variable)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` ~ variable)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge` + type ~ variable)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(type~variable)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
ggplot(aes(x = Application, y = `Cognitive process`)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(`Type of Knowledge`+type~variable)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(knowledge=`Type of Knowledge`)
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge+type~variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(variable~Knowledge+type) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(variable~type+Knowledge) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge~type+variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge~type+variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","X-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge~type+variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),10
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge~type+variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels = str_wrap(
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
),15
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
oncat.data %>%
group_by(school, type, `Type of Knowledge`) %>%
mutate_each(funs(as.numeric),-school,-type,-`Type of Knowledge`) %>%
#summarize_each(funs(mean), -school, -type, -`Type of Knowledge`) %>%
gather(
variable,value,-school,-type,-Application,-`Cognitive process`,-`Type of Knowledge`
) %>%
arrange(value, variable, `Cognitive process`, Application, `Type of Knowledge`) %>%
rename(Knowledge = `Type of Knowledge`,
Process = `Cognitive process`) %>%
ggplot(aes(x = Application, y = Process)) +
geom_point(
aes(fill = factor(value)), size = 6, pch = 21, show.legend = TRUE, position =
position_jitter()
) +
facet_grid(Knowledge~type+variable) +
xlab("\nApplication") +
ylab("Cognitive Process\n") +
scale_y_discrete(labels = str_wrap(
c(
"Remember","Understand","Apply","Analyze","Evaluate","Create"
), 10
), limits = c(1:6)) +
scale_x_discrete(labels =
c(
"Disciplinary Knowledge","Disciplinary Application","Cross-disciplinary Application","Real-world predictable application","Real-world Unpredictable Application"
), limits = c(1:5)) +
guides(fill = guide_legend(title = "Scale Level")) +
# scale_colour_continuous(range=c(10,30), limits=c(1,3), breaks=c(1,2,3)) +
scale_fill_brewer(type = "seq", palette = "YlOrRd") +
theme_tufte(base_size = 14) +
theme(axis.text.x = element_text(angle = 90, hjust = -1),
strip.text.y = element_text(angle = 0),
legend.position = "bottom")
